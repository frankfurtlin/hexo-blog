<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>场内基金数据分析</title>
      <link href="/2022/12/08/%E5%9C%BA%E5%86%85%E5%9F%BA%E9%87%91%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/"/>
      <url>/2022/12/08/%E5%9C%BA%E5%86%85%E5%9F%BA%E9%87%91%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="场内基金数据分析"><a href="#场内基金数据分析" class="headerlink" title="场内基金数据分析"></a>场内基金数据分析</h1><h2 id="1-爬取场内基金数据"><a href="#1-爬取场内基金数据" class="headerlink" title="1. 爬取场内基金数据"></a>1. 爬取场内基金数据</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------爬取所有场内基金名单开始----------&#x27;</span>)</span><br><span class="line"><span class="comment"># 天天基金所有场内交易基金url</span></span><br><span class="line">url = <span class="string">&#x27;http://fund.eastmoney.com/data/rankhandler.aspx?op=ph&amp;dt=fb&amp;ft=ct&amp;rs=&amp;gs=0&amp;sc=clrq&amp;st=asc&amp;pi=1&amp;pn=1000&#x27;</span></span><br><span class="line"><span class="comment"># 请求头</span></span><br><span class="line">header = &#123;</span><br><span class="line">    <span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) &#x27;</span></span><br><span class="line">                    <span class="string">&#x27;Chrome/101.0.4951.67 Safari/537.36 &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Host&#x27;</span>: <span class="string">&#x27;fund.eastmoney.com&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;Referer&#x27;</span>: <span class="string">&#x27;http://fund.eastmoney.com/data/fbsfundranking.html&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 请求应答</span></span><br><span class="line">response = requests.get(url, headers=header)</span><br><span class="line">response.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"><span class="comment"># print(response.text)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 去无关的信息</span></span><br><span class="line">response_body = response.text.replace(<span class="string">&quot;var rankData = &quot;</span>, <span class="string">&quot;&quot;</span>).replace(<span class="string">&quot;;&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line"><span class="comment"># print(response_body)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通过”“分割应答消息</span></span><br><span class="line">datas = response_body.split(<span class="string">&#x27;&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 构建的pandas二维数组</span></span><br><span class="line">data_list = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每隔一行都是数据</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="built_in">len</span>(datas), <span class="number">2</span>):</span><br><span class="line">    <span class="comment"># print(datas[i])</span></span><br><span class="line">    <span class="comment"># 保存每一行的数据</span></span><br><span class="line">    item = []</span><br><span class="line">    <span class="comment"># 每行数据根据逗号分割加入数组</span></span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas[i].split(<span class="string">&#x27;,&#x27;</span>):</span><br><span class="line">        item.append(data)</span><br><span class="line">    data_list.append(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># print(data_list)</span></span><br><span class="line">result = pd.DataFrame(data_list)</span><br><span class="line">file_name = datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>) + <span class="string">&#x27;-fund.csv&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除几列没用的数据</span></span><br><span class="line">result.drop(columns=[<span class="number">16</span>, <span class="number">17</span>, <span class="number">18</span>, <span class="number">19</span>, <span class="number">20</span>], inplace=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 设置表头</span></span><br><span class="line">result.columns = [<span class="string">&#x27;基金代码&#x27;</span>, <span class="string">&#x27;基金全称&#x27;</span>, <span class="string">&#x27;基金英文缩写&#x27;</span>, <span class="string">&#x27;日期&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;单位净值&#x27;</span>, <span class="string">&#x27;累计净值&#x27;</span>, <span class="string">&#x27;近一周&#x27;</span>, <span class="string">&#x27;近一月&#x27;</span>, <span class="string">&#x27;近三月&#x27;</span>, <span class="string">&#x27;近六月&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;近一年&#x27;</span>, <span class="string">&#x27;近两年&#x27;</span>, <span class="string">&#x27;近三年&#x27;</span>, <span class="string">&#x27;今年来&#x27;</span>, <span class="string">&#x27;成立来&#x27;</span>, <span class="string">&#x27;成立日期&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;类型&#x27;</span>, <span class="string">&#x27;近五年&#x27;</span>]</span><br><span class="line"><span class="comment"># 调整列顺序</span></span><br><span class="line">fund_type = result.pop(<span class="string">&quot;类型&quot;</span>)</span><br><span class="line">result.insert(<span class="number">3</span>, <span class="string">&quot;类型&quot;</span>, fund_type)</span><br><span class="line">five_rate = result.pop(<span class="string">&quot;近五年&quot;</span>)</span><br><span class="line">result.insert(<span class="number">14</span>, <span class="string">&quot;近五年&quot;</span>, five_rate)</span><br><span class="line"></span><br><span class="line">result.to_csv(file_name, encoding=<span class="string">&#x27;gbk&#x27;</span>, index=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;总共爬取了&quot;</span> + <span class="built_in">str</span>(<span class="built_in">len</span>(datas) // <span class="number">2</span>) + <span class="string">&quot;只场内基金数据&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------爬取所有场内基金名单结束----------&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="2-获取所有场内基金的规模"><a href="#2-获取所有场内基金的规模" class="headerlink" title="2. 获取所有场内基金的规模"></a>2. 获取所有场内基金的规模</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------爬取所有场内基金的规模开始----------&#x27;</span>)</span><br><span class="line">file_name = datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>) + <span class="string">&#x27;-fund.csv&#x27;</span></span><br><span class="line">fund_csv = pd.read_csv(file_name, encoding=<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">fund_code_list = fund_csv[<span class="string">&#x27;基金代码&#x27;</span>]</span><br><span class="line"><span class="comment"># print(fund_code_list.size)</span></span><br><span class="line">fund_scale = []</span><br><span class="line">fund_scale_time = []</span><br><span class="line"><span class="comment"># 添加进度条</span></span><br><span class="line"><span class="keyword">for</span> fund_code <span class="keyword">in</span> tqdm(fund_code_list):</span><br><span class="line">    url = <span class="string">&#x27;http://fund.eastmoney.com/pingzhongdata/&#x27;</span> + <span class="built_in">str</span>(fund_code) + <span class="string">&#x27;.js?v=20221205224650&#x27;</span></span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line">    response = requests.get(url)</span><br><span class="line">    <span class="comment"># 截取后面一部分</span></span><br><span class="line">    tile = response.text[-<span class="number">4000</span>:-<span class="number">1000</span>]</span><br><span class="line">    index_head = tile.find(<span class="string">&#x27;&#123;&quot;name&quot;:&quot;净资产&quot;&#x27;</span>)</span><br><span class="line">    index_tail = tile.find(<span class="string">&#x27;;/*业绩评价&#x27;</span>)</span><br><span class="line">    <span class="comment"># 构造json</span></span><br><span class="line">    tile_new = tile[index_head:index_tail].replace(<span class="string">&#x27;&#125;]&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    tile_json = json.loads(tile_new)</span><br><span class="line">    <span class="comment"># print(tile_json)</span></span><br><span class="line">    <span class="comment"># 将基金规模与对应的时间写入list</span></span><br><span class="line">    <span class="comment"># print(tile_json[&#x27;data&#x27;])</span></span><br><span class="line">    <span class="comment"># print(tile_json[&#x27;categories&#x27;])</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(tile_json[<span class="string">&#x27;data&#x27;</span>]) &gt; <span class="number">0</span>:</span><br><span class="line">        fund_scale.append(tile_json[<span class="string">&#x27;data&#x27;</span>][-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fund_scale.append(np.nan)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(tile_json[<span class="string">&#x27;categories&#x27;</span>]) &gt; <span class="number">0</span>:</span><br><span class="line">        fund_scale_time.append(tile_json[<span class="string">&#x27;categories&#x27;</span>][-<span class="number">1</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        fund_scale_time.append(np.nan)</span><br><span class="line">fund_csv[<span class="string">&#x27;基金规模&#x27;</span>] = fund_scale</span><br><span class="line">fund_csv[<span class="string">&#x27;基金规模时间&#x27;</span>] = fund_scale_time</span><br><span class="line">fund_csv.to_csv(file_name, encoding=<span class="string">&#x27;gbk&#x27;</span>, index=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------爬取所有场内基金的规模结束----------&#x27;</span>)</span><br></pre></td></tr></table></figure><h2 id="3-筛选基金规模在2亿以上的并可视化分析"><a href="#3-筛选基金规模在2亿以上的并可视化分析" class="headerlink" title="3. 筛选基金规模在2亿以上的并可视化分析"></a>3. 筛选基金规模在2亿以上的并可视化分析</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------可视化分析场内基金开始----------&#x27;</span>)</span><br><span class="line">file_name = datetime.datetime.now().strftime(<span class="string">&quot;%Y-%m-%d&quot;</span>) + <span class="string">&#x27;-fund&#x27;</span></span><br><span class="line">fund_csv = pd.read_csv(file_name + <span class="string">&quot;.csv&quot;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>)</span><br><span class="line">fund_scale_above_200_million = fund_csv[fund_csv[<span class="string">&#x27;基金规模&#x27;</span>] &gt; <span class="number">2</span>]</span><br><span class="line">profile_fund = pandas_profiling.ProfileReport(fund_scale_above_200_million, title=<span class="string">&quot;场内2亿规模以上基金分析报告&quot;</span>)</span><br><span class="line">profile_fund.to_file(file_name + <span class="string">&#x27;.html&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;----------可视化分析场内基金结束----------&#x27;</span>)</span><br></pre></td></tr></table></figure><p><a href="http://www.frankfurtlin.xyz/2022-12-08-fund.html">分析可视化示例</a></p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
            <tag> 数据分析 </tag>
            
            <tag> 基金 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建海报生成器</title>
      <link href="/2022/11/30/%E6%90%AD%E5%BB%BA%E6%B5%B7%E6%8A%A5%E7%94%9F%E6%88%90%E5%99%A8/"/>
      <url>/2022/11/30/%E6%90%AD%E5%BB%BA%E6%B5%B7%E6%8A%A5%E7%94%9F%E6%88%90%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="海报生成器"><a href="#海报生成器" class="headerlink" title="海报生成器"></a>海报生成器</h1><h2 id="1-安装-docker"><a href="#1-安装-docker" class="headerlink" title="1. 安装 docker"></a>1. 安装 docker</h2><p>宝塔面板安装 docker</p><h2 id="2-拉取-fastposter-镜像"><a href="#2-拉取-fastposter-镜像" class="headerlink" title="2. 拉取 fastposter 镜像"></a>2. 拉取 fastposter 镜像</h2><p><a href="https://poster.prodapi.cn/doc/">fastposter主页</a></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 首先在服务器安全组放开5000端口</span></span><br><span class="line">$ docker run -it -e POSTER_URI_PREFIX=http://ip:5000/ --name fast-poster -p 5000:5000 tangweixin/fast-poster</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 海报 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建在线网盘</title>
      <link href="/2022/11/30/%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E7%BD%91%E7%9B%98/"/>
      <url>/2022/11/30/%E6%90%AD%E5%BB%BA%E5%9C%A8%E7%BA%BF%E7%BD%91%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="自建网盘服务器"><a href="#自建网盘服务器" class="headerlink" title="自建网盘服务器"></a>自建网盘服务器</h1><h2 id="开源网盘解决方案选取"><a href="#开源网盘解决方案选取" class="headerlink" title="开源网盘解决方案选取"></a>开源网盘解决方案选取</h2><h3 id="1-OwnCloud"><a href="#1-OwnCloud" class="headerlink" title="1. OwnCloud"></a>1. OwnCloud</h3><p><a href="https://owncloud.com/">OwnCloud官网</a></p><p>owncloud是一款开源的多用户私有云存储系统，与Dropbox、Box、Google Drive极为相似，但与他们最大的不同在于owncloud是由成千上万的社区开发者贡献代码构建而成，完全免费。</p><p>owncloud服务端依赖LAMP（Linux、Apache、MySQL、PHP）环境运行，提供近乎完美的跨平台客户端支持，包括各主流Linux发行版、Windows（owncloud 8以后不再支持Windows Server系统）、macOS，以及Android和IOS手机客户端。</p><p>owncloud能把用户的文件完整的在每一个客户端之间同步，做到一处修改处处更新，并且可以随时将文件或文件夹共享给其他用户。同时，owncloud支持安装插件，实现诸如电子邮件、日历、联系人、音乐、相册等丰富的功能。</p><h3 id="2-NextCloud"><a href="#2-NextCloud" class="headerlink" title="2. NextCloud"></a>2. NextCloud</h3><p><a href="https://nextcloud.com/">NextCloud官网</a></p><p>NextCloud是从OwnCloud项目中孵化出来的，Nextcloud修复了大量的bug，并增加了许多用户期待的功能，包括且不限于：</p><ul><li>修复了40多个错误，其中大部分是早已存在的。</li><li>支持自由修改LOGO和主题颜色。</li><li>集成视频播放器。</li><li>相册界面增强。</li><li>增加服务器信息统计插件，可以查看实时 CPU 负载、内存用量、存储空间，并且可以使用第三方统计监测工具访问。</li><li>增加在线 OFFICE 办公软件等高级功能，且视频和音频会议与 Spreed.ME WebRTC 平台完全兼容。</li><li>全新的应用插件商店。</li></ul><h3 id="3-可道云"><a href="#3-可道云" class="headerlink" title="3. 可道云"></a>3. 可道云</h3><p><a href="https://kodcloud.com/">可道云官网</a></p><p>可道云是国内开源的自建网盘，方案高效，流畅云端存储&amp;协同办公新体验</p><ul><li>如Windows体验的私有云盘&#x2F;企业网盘</li><li>完全支持私有化部署，存储安全可控</li><li>数百种文件格式在线预览、编辑和播放</li><li>轻松分享，高效协作，细粒度权限管控</li><li>全平台客户端覆盖，随时随地访问，轻松同步挂载</li></ul><h2 id="可道云网盘搭建"><a href="#可道云网盘搭建" class="headerlink" title="可道云网盘搭建"></a>可道云网盘搭建</h2><h3 id="1-安装宝塔面板"><a href="#1-安装宝塔面板" class="headerlink" title="1. 安装宝塔面板"></a>1. 安装宝塔面板</h3><p>服务后台安全组放开<code>8888</code>端口供宝塔面板连接</p><p><a href="https://www.bt.cn/new/download.html">Linux面板在线安装</a></p><h3 id="2-安装可道云网盘"><a href="#2-安装可道云网盘" class="headerlink" title="2. 安装可道云网盘"></a>2. 安装可道云网盘</h3><p>在线安装成功后，进入宝塔面板后台，打开<code>软件商店</code>-&gt;<code>一键部署</code>，找到<code>可道云KODBOX</code>，可选更改端口（若更改了端口，记得在服务器安全组放开），点击安装</p><h3 id="3-验证登录"><a href="#3-验证登录" class="headerlink" title="3. 验证登录"></a>3. 验证登录</h3><p>在宝塔面板后台查看 Nginx 是否运行成功，成功后输入<code>ip:port</code>登录可道云网盘</p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> 网盘 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建 Git 服务器</title>
      <link href="/2022/11/18/%E6%90%AD%E5%BB%BA-Git-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
      <url>/2022/11/18/%E6%90%AD%E5%BB%BA-Git-%E6%9C%8D%E5%8A%A1%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="搭建-Git-服务器"><a href="#搭建-Git-服务器" class="headerlink" title="搭建 Git 服务器"></a>搭建 Git 服务器</h1><h2 id="1-本地生成登录用户的密钥"><a href="#1-本地生成登录用户的密钥" class="headerlink" title="1. 本地生成登录用户的密钥"></a>1. 本地生成登录用户的密钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 生成密钥</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;youremail@example.com&quot;</span></span><br><span class="line"><span class="comment"># 查看密钥</span></span><br><span class="line"><span class="built_in">cd</span> ~/.ssh &amp;&amp; vim id_rsa.pub</span><br><span class="line"><span class="comment"># 复制上述密钥留作后面粘贴到服务器的 /home/git/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><h2 id="2-服务器安装-Git（以-centos-为例）"><a href="#2-服务器安装-Git（以-centos-为例）" class="headerlink" title="2. 服务器安装 Git（以 centos 为例）"></a>2. 服务器安装 Git（以 centos 为例）</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更新 yum</span></span><br><span class="line">yum update</span><br><span class="line"><span class="comment"># 安装 git</span></span><br><span class="line">yum install git</span><br><span class="line"><span class="comment"># 查看安装好的 git</span></span><br><span class="line">git --version</span><br></pre></td></tr></table></figure><h2 id="3-创建一个-Git-用户，用来运行-Git-服务"><a href="#3-创建一个-Git-用户，用来运行-Git-服务" class="headerlink" title="3. 创建一个 Git 用户，用来运行 Git 服务"></a>3. 创建一个 Git 用户，用来运行 Git 服务</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser git</span><br></pre></td></tr></table></figure><h2 id="4-导入用户的公钥"><a href="#4-导入用户的公钥" class="headerlink" title="4. 导入用户的公钥"></a>4. 导入用户的公钥</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 切换到用户目录</span></span><br><span class="line"><span class="built_in">cd</span> /home/git</span><br><span class="line"><span class="comment"># 新建.ssh目录</span></span><br><span class="line"><span class="built_in">mkdir</span> .ssh &amp;&amp; <span class="built_in">cd</span> .ssh</span><br><span class="line"><span class="comment"># 新建用户认证文件</span></span><br><span class="line"><span class="built_in">touch</span> authorized_keys &amp;&amp; vim authorized_keys</span><br><span class="line"><span class="comment"># 粘贴上述的本地用户公钥到该文件中</span></span><br></pre></td></tr></table></figure><h2 id="5-初始化-Git-项目"><a href="#5-初始化-Git-项目" class="headerlink" title="5. 初始化 Git 项目"></a>5. 初始化 Git 项目</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 假定是 /srv/sample.git</span></span><br><span class="line"><span class="built_in">cd</span> /srv</span><br><span class="line">git init --bare sample.git</span><br></pre></td></tr></table></figure><h2 id="6-将该项目-owner-改为-git-用户"><a href="#6-将该项目-owner-改为-git-用户" class="headerlink" title="6. 将该项目 owner 改为 git 用户"></a>6. 将该项目 owner 改为 git 用户</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">chown</span> -R git:git sample.git</span><br></pre></td></tr></table></figure><h2 id="7-禁用-shell-登录"><a href="#7-禁用-shell-登录" class="headerlink" title="7. 禁用 shell 登录"></a>7. 禁用 shell 登录</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 出于安全考虑，第三步创建的 git 用户不允许登录 shell，可以正常通过 ssh 使用 git</span></span><br><span class="line">vim /etc/passwd</span><br><span class="line"><span class="comment">#修改 git:x:1001:1001:,,,:/home/git:/bin/bash 为</span></span><br><span class="line"><span class="comment"># git:x:1001:1001:,,,:/home/git:/usr/bin/git-shell</span></span><br></pre></td></tr></table></figure><h2 id="8-克隆远程仓库"><a href="#8-克隆远程仓库" class="headerlink" title="8. 克隆远程仓库"></a>8. 克隆远程仓库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> git@server_ip:/srv/sample.git</span><br></pre></td></tr></table></figure><h2 id="9-管理多人密钥"><a href="#9-管理多人密钥" class="headerlink" title="9. 管理多人密钥"></a>9. 管理多人密钥</h2><p><a href="https://github.com/res0nat0r/gitosis">Gitosis</a></p><h2 id="10-管理权限"><a href="#10-管理权限" class="headerlink" title="10. 管理权限"></a>10. 管理权限</h2><p><a href="https://github.com/sitaramc/gitolite">Gitolite</a></p><p>转载自廖雪峰博客<a href="https://www.liaoxuefeng.com/wiki/896043488029600/899998870925664">搭建Git服务器</a></p>]]></content>
      
      
      <categories>
          
          <category> 服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mermaid</title>
      <link href="/2022/11/16/mermaid/"/>
      <url>/2022/11/16/mermaid/</url>
      
        <content type="html"><![CDATA[<p>使用mermaid标签可以绘制Flowchart（流程图）、Sequence diagram（时序图）、Class Diagram（类别图）、State Diagram（状态图）、Gantt（甘特图）和Pie Chart（圆形图），具体可以查看<a href="https://mermaid-js.github.io/mermaid/#/">mermaid文档</a></p><h1 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h1><h3 id="流程图"><a href="#流程图" class="headerlink" title="流程图"></a>流程图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">graph TD;</span><br><span class="line"><span class="code">    A--&gt;B;</span></span><br><span class="line"><span class="code">    A--&gt;C;</span></span><br><span class="line"><span class="code">    B--&gt;D;</span></span><br><span class="line"><span class="code">    C--&gt;D;</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  graph TD;    A--&gt;B;    A--&gt;C;    B--&gt;D;    C--&gt;D;  </pre></div><h3 id="时序图"><a href="#时序图" class="headerlink" title="时序图"></a>时序图</h3><figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">sequenceDiagram</span><br><span class="line"><span class="code">    participant Alice</span></span><br><span class="line"><span class="code">    participant Bob</span></span><br><span class="line"><span class="code">    Alice-&gt;&gt;John: Hello John, how are you?</span></span><br><span class="line"><span class="code">    loop Healthcheck</span></span><br><span class="line"><span class="code">        John-&gt;&gt;John: Fight against hypochondria</span></span><br><span class="line"><span class="code">    end</span></span><br><span class="line"><span class="code">    Note right of John: Rational thoughts &lt;br/&gt;prevail!</span></span><br><span class="line"><span class="code">    John--&gt;&gt;Alice: Great!</span></span><br><span class="line"><span class="code">    John-&gt;&gt;Bob: How about you?</span></span><br><span class="line"><span class="code">    Bob--&gt;&gt;John: Jolly good!</span></span><br><span class="line"><span class="code">&#123;% endmermaid %&#125;</span></span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  sequenceDiagram    participant Alice    participant Bob    Alice-&gt;&gt;John: Hello John, how are you?    loop Healthcheck        John-&gt;&gt;John: Fight against hypochondria    end    Note right of John: Rational thoughts &lt;br&#x2F;&gt;prevail!    John--&gt;&gt;Alice: Great!    John-&gt;&gt;Bob: How about you?    Bob--&gt;&gt;John: Jolly good!  </pre></div><h3 id="甘特图"><a href="#甘特图" class="headerlink" title="甘特图"></a>甘特图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">gantt</span><br><span class="line">dateFormat  YYYY-MM-DD</span><br><span class="line">title Adding GANTT diagram to mermaid</span><br><span class="line">excludes weekdays 2014-01-10</span><br><span class="line"></span><br><span class="line">section A section</span><br><span class="line">Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">Future task               :         des3, after des2, 5d</span><br><span class="line">Future task2               :         des4, after des3, 5d</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  ganttdateFormat  YYYY-MM-DDtitle Adding GANTT diagram to mermaidexcludes weekdays 2014-01-10section A sectionCompleted task            :done,    des1, 2014-01-06,2014-01-08Active task               :active,  des2, 2014-01-09, 3dFuture task               :         des3, after des2, 5dFuture task2               :         des4, after des3, 5d  </pre></div><h3 id="类图"><a href="#类图" class="headerlink" title="类图"></a>类图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">classDiagram</span><br><span class="line">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class="line">Class03 *-- Class04</span><br><span class="line">Class05 o-- Class06</span><br><span class="line">Class07 .. Class08</span><br><span class="line">Class09 --&gt; C2 : Where am i?</span><br><span class="line">Class09 --* C3</span><br><span class="line">Class09 --|&gt; Class07</span><br><span class="line">Class07 : equals()</span><br><span class="line">Class07 : Object[] elementData</span><br><span class="line">Class01 : size()</span><br><span class="line">Class01 : int chimp</span><br><span class="line">Class01 : int gorilla</span><br><span class="line">Class08 &lt;--&gt; C2: Cool label</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  classDiagramClass01 &lt;|-- AveryLongClass : CoolClass03 *-- Class04Class05 o-- Class06Class07 .. Class08Class09 --&gt; C2 : Where am i?Class09 --* C3Class09 --|&gt; Class07Class07 : equals()Class07 : Object[] elementDataClass01 : size()Class01 : int chimpClass01 : int gorillaClass08 &lt;--&gt; C2: Cool label  </pre></div><h3 id="Git图"><a href="#Git图" class="headerlink" title="Git图"></a>Git图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">gitGraph</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br><span class="line">    branch develop</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br><span class="line">    checkout main</span><br><span class="line">    commit</span><br><span class="line">    commit</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  gitGraph    commit    commit    branch develop    commit    commit    commit    checkout main    commit    commit  </pre></div><h3 id="实体关系图"><a href="#实体关系图" class="headerlink" title="实体关系图"></a>实体关系图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">erDiagram</span><br><span class="line">    CUSTOMER ||--o&#123; ORDER : places</span><br><span class="line">    ORDER ||--|&#123; LINE-ITEM : contains</span><br><span class="line">    CUSTOMER &#125;|..|&#123; DELIVERY-ADDRESS : uses</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  erDiagram    CUSTOMER ||--o{ ORDER : places    ORDER ||--|{ LINE-ITEM : contains    CUSTOMER }|..|{ DELIVERY-ADDRESS : uses  </pre></div><h3 id="用户流程图"><a href="#用户流程图" class="headerlink" title="用户流程图"></a>用户流程图</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">journey</span><br><span class="line">    title My working day</span><br><span class="line">    section Go to work</span><br><span class="line">      Make tea: 5: Me</span><br><span class="line">      Go upstairs: 3: Me</span><br><span class="line">      Do work: 1: Me, Cat</span><br><span class="line">    section Go home</span><br><span class="line">      Go downstairs: 5: Me</span><br><span class="line">      Sit down: 5: Me</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure><div class="mermaid-wrap"><pre class="mermaid-src" hidden>  journey    title My working day    section Go to work      Make tea: 5: Me      Go upstairs: 3: Me      Do work: 1: Me, Cat    section Go home      Go downstairs: 5: Me      Sit down: 5: Me  </pre></div>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2022/11/13/hexo/"/>
      <url>/2022/11/13/hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> 框架 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
